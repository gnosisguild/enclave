#!/usr/bin/env bash
CONTAINER_NAME="e3-support.1"
IMAGE="ghcr.io/gnosisguild/e3-support:hacknet"
CACHE_PREFIX="e3-support"

# Function to cleanup
cleanup() {
    echo "Stopping container and processes..."
    # Try to gracefully stop the container first
    docker exec "$CONTAINER_NAME" pkill -SIGTERM e3-support-app 2>/dev/null || true
    sleep 2
    # Force stop if still running
    docker exec "$CONTAINER_NAME" pkill -SIGKILL e3-support-app 2>/dev/null || true
    docker stop "$CONTAINER_NAME" 2>/dev/null || true
}

# Set trap for signals
trap cleanup EXIT INT TERM

# Pull the latest image to ensure we have the most recent version
# NOTE: This might cause issues if the CLI is not up to date
echo "Pulling latest image: $IMAGE"
docker pull "$IMAGE" || {
    echo "Warning: Failed to pull latest image, using cached version"
}

# Ensure directories exist with proper permissions
mkdir -p "$(pwd)/target"
chmod -R 777 "$(pwd)/target"

if docker ps -q -f name="$CONTAINER_NAME" | grep -q .; then
    docker exec -it "$CONTAINER_NAME" bash -c "$*"
else
    docker run -it --rm \
        --name "$CONTAINER_NAME" \
        --network=host \
        --platform linux/amd64 \
        -v "$(pwd)/contracts:/app/contracts" \
        -v "$(pwd)/tests:/app/tests" \
        -v "$(pwd)/target:/app/target" \
        -v "${CACHE_PREFIX}-cargo-cache:/usr/local/cargo" \
        "$IMAGE" bash -c "$*"
fi